import pandas as pd
from sklearn import cross_validation

from sklearn import metrics
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.neighbors import KNeighborsClassifier

"""
This dataset is composed of a selection of Windows API/System-Call trace files, intended for testing on classifiers
treating with sequences. You can download data set http://csmining.org/index.php/malicious-software-datasets-.html link
"""

# Training data
train_file = "./CSDMC_API_Train.csv"

# Test data. Note test data not contain malware. So I will mush-up to training data. And Split 1/4 for test
test_file = "./CSDMC_API_TestData.csv"


data_train = pd.read_csv(train_file, header=0, names=['0', '1'])

# Train data set
X_train = data_train['1'].tolist()
Y_train = data_train['0'].tolist()

data_test = pd.read_csv(test_file, header=0, delimiter=',', names=['0', '1'])

# Data test
X_test = data_test['1'].tolist()
Y_test = data_test['0'].tolist()

# Mush-Up data
corpus = X_train + X_test
labels = Y_train + Y_test

# Split data for testing
doc_train, doc_test, y_train, y_test = cross_validation.train_test_split(corpus,labels,test_size=0.25,stratify=labels,random_state=7)

# TTfidfVectorizer vector
vectorizer = TfidfVectorizer(ngram_range=(1,1), min_df=1, lowercase=True)
#X_train_ = vectorizer.fit_transform(X_train)
vectorizer.fit(X_train)
X_train_ = vectorizer.transform(doc_train)
X_test_ = vectorizer.transform(doc_test)

clf = KNeighborsClassifier(n_neighbors=30)
clf.fit(X_train_, y_train)

# Prediction
y_pred = clf.predict(X_test_)

print metrics.classification_report(y_test, y_pred)
